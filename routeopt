Map: https://arcg.is/0zm8eT
Presentation: https://arcg.is/1XP990


Point to point optimizing code by HTML:
https://codepen.io/janevu17/pen/GRKPEZN
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">
  <title>Grocery Optimization</title>
  <style>
    html,
    body,
    #viewDiv {
      padding: 0;
      margin: 0;
      height: 100%;
      width: 100%;
    }
  </style>

  <link rel="stylesheet" href="https://js.arcgis.com/4.12/esri/css/main.css">
  <script src="https://js.arcgis.com/4.12/"></script>

  <script>
    require([
      "esri/Map",
      "esri/views/MapView",
      "esri/tasks/RouteTask",
      "esri/tasks/support/RouteParameters",
      "esri/tasks/support/FeatureSet",
      "esri/Graphic"
    ], function(Map, MapView, RouteTask, RouteParameters, FeatureSet, Graphic) {
      var map = new Map({
        basemap: "streets-navigation-vector"
      });
      var view = new MapView({
        container: "viewDiv",
        map: map,
        center: [-111.941254,33.425522],
        zoom: 12
      });
      var routeTask = new RouteTask({
        url: "https://route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World"
      });
      view.on("click", function(event) {
        if (view.graphics.length === 0) {
          addGraphic("start", event.mapPoint);
        } else if (view.graphics.length === 1) {
          addGraphic("start", event.mapPoint);
          getRoute();
        } else {
          view.graphics.removeAll();
          addGraphic("start", event.mapPoint);
        }
      });

      function addGraphic(type, point) {
        var graphic = new Graphic({
          symbol: {
            type: "simple-marker",
            color: (type === "start") ? "red" : "yellow",
            size: "8px"
          },
          geometry: point
        });
        view.graphics.add(graphic);
      }
      
      function getRoute(){
        var routeParams = new RouteParameters({
          stops: new FeatureSet({
            features: view.graphics.toArray()
          }),
          returnDirections: true
          });
          routeTask.solve(routeParams).then(function(data){
            data.routeResults.forEach(function(result){
              result.route.symbol = {
                type: "simple-line",
                color: [5, 150, 255],
                width: 3
              };
              view.graphics.add(result.route);
            });
          });  
      }
    });
  </script>
</head>

<body>
  <div id="viewDiv"></div>
</body>

</html>
